# set custome bash prompt
PS1='\[`[ $? = 0 ] && X=2 || X=1; tput setaf $X`\][\d \t:\u@\h]\n\[`tput sgr0`\][$PWD]\n-> '

which neofetch
[ $? = 0 ] && neofetch --ascii || echo "neofetch is not installed"

export CLICOLOR=1
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

export VISUAL=vim
export EDITOR="$VISUAL"

# global alias
alias l='ls -lp'
alias ll='ls -lahp'
alias lr='ls -lahprt' 
alias h='history'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

alias ctagdb='ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --language-force=c++ .'
alias cscopedb='ack -f --cpp >| cscope.files && cscope -b -q -k'

# git alias
alias gitroot='cd $(git rev-parse --show-cdup)'

# for MACOSX
if [ -f "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=1
    source "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh"
fi

if [ -f `brew --prefix`/etc/bash_completion ]; then
        . `brew --prefix`/etc/bash_completion
fi

# for ARCH linux
if [ -f /usr/share/git/completion/git-completion.bash ]; then
    source /usr/share/git/completion/git-completion.bash
fi

if [ -f /usr/share/git/completion/git-prompt.sh ]; then
    source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    GIT_PS1_SHOWUPSTREAM=1
    PS1='\[`[ $? = 0 ] && X=2 || X=1; tput setaf $X`\][\d \t:\u@\h]\n[\W$(__git_ps1 " (%s)")]\$ '
fi

if [ -f "$HOME/hhighlighter/h.sh" ]; then
    source $HOME/hhighlighter/h.sh
fi
